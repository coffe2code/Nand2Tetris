@256
D=A
@SP
M=D
@return-address0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(return-address0)
(Sys.init)
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
@return-address1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(return-address1)
(Sys.init.WHILE)
@Sys.init.WHILE
0;JMP
(Main.fibonacci)
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M-1
D=M
A=A-1
D=M-D
@IfLt0
D;JGE
@SP
A=M-1
A=A-1
M=-1
@SP
M=M-1
@IfLtEnd0
0;JMP
(IfLt0)
@SP
A=M-1
A=A-1
M=0
@SP
M=M-1
(IfLtEnd0)
@SP
A=M-1
D=M
@SP
M=M-1
@Main.fibonacci.IF_TRUE
D;JNE
@Main.fibonacci.IF_FALSE
0;JMP
(Main.fibonacci.IF_TRUE)
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//Set FRAME = LCL
@LCL
D=M
@13
M=D
//Set RET = *(FRAME-5)
@13
D=M
@5
D=D-A
A=D
D=M
@14
M=D
//Set arg=pop()
@SP
A=M-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
//Set SP = ARG+1
@ARG
D=M+1
@SP
M=D
//Set THAT = *(frame-1)
@13
A=M-1
D=M
@THAT
M=D
//Set THIS = *(frame-2)
@2
D=A
@13
A=M
A=A-D
D=M
@THIS
M=D
//Set ARG = *(frame-3)
@3
D=A
@13
A=M
A=A-D
D=M
@ARG
M=D
//Set LCL = *(frame-4)
@4
D=A
@13
A=M
A=A-D
D=M
@LCL
M=D
//goto ret
@14
A=M
0;JMP
(Main.fibonacci.IF_FALSE)
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M-1
D=M
A=A-1
D=M-D
M=D
@SP
M=M-1
@return-address2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(return-address2)
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M-1
D=M
A=A-1
D=M-D
M=D
@SP
M=M-1
@return-address3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(return-address3)
@SP
A=M-1
D=M
A=A-1
D=D+M
M=D
@SP
M=M-1
//Set FRAME = LCL
@LCL
D=M
@13
M=D
//Set RET = *(FRAME-5)
@13
D=M
@5
D=D-A
A=D
D=M
@14
M=D
//Set arg=pop()
@SP
A=M-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
//Set SP = ARG+1
@ARG
D=M+1
@SP
M=D
//Set THAT = *(frame-1)
@13
A=M-1
D=M
@THAT
M=D
//Set THIS = *(frame-2)
@2
D=A
@13
A=M
A=A-D
D=M
@THIS
M=D
//Set ARG = *(frame-3)
@3
D=A
@13
A=M
A=A-D
D=M
@ARG
M=D
//Set LCL = *(frame-4)
@4
D=A
@13
A=M
A=A-D
D=M
@LCL
M=D
//goto ret
@14
A=M
0;JMP
(END)
@END
0;JMP
